# Generated by Django 4.0.2 on 2022-03-04 21:33

from django.db import migrations, models
import django.db.models.deletion
import tinymce.models
import utility.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('authentication', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=500, null=True, verbose_name='title')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.profile', verbose_name='profile')),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
            },
            bases=(models.Model, utility.utils.LinkHelper),
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='بانک')),
                ('branch', models.CharField(blank=True, max_length=50, null=True, verbose_name='شعبه')),
                ('address', models.CharField(blank=True, max_length=50, null=True, verbose_name='آدرس')),
                ('tel', models.CharField(blank=True, max_length=50, null=True, verbose_name='تلفن')),
            ],
            options={
                'verbose_name': 'Bank',
                'verbose_name_plural': 'Banks',
            },
        ),
        migrations.CreateModel(
            name='FinancialYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='عنوان')),
                ('year', models.IntegerField(verbose_name='year')),
                ('start_date', models.DateTimeField(verbose_name='start_date')),
                ('end_date', models.DateTimeField(verbose_name='end_date')),
            ],
            options={
                'verbose_name': 'FinancialYear',
                'verbose_name_plural': 'FinancialYears',
            },
        ),
        migrations.CreateModel(
            name='ProductorService',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.page')),
            ],
            options={
                'verbose_name': 'ProductorService',
                'verbose_name_plural': 'ProductorServices',
            },
            bases=('core.page',),
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.page')),
                ('status', models.CharField(choices=[('پیش نویس', 'پیش نویس'), ('در جریان', 'در جریان'), ('تحویل شده', 'تحویل شده'), ('تایید شده', 'تایید شده'), ('کنسل شده', 'کنسل شده'), ('پاس شده', 'پاس شده')], default='پیش نویس', max_length=50, verbose_name='وضعیت')),
                ('amount', models.IntegerField(default=0, verbose_name='amount')),
                ('payment_method', models.CharField(choices=[('پیش نویس', 'پیش نویس'), ('پرداخت نشده', 'پرداخت نشده'), ('همراه بانک', 'همراه بانک'), ('نقدی', 'نقدی'), ('چک', 'چک'), ('کارتخوان', 'کارتخوان'), ('کارت به کارت', 'کارت به کارت')], default='پیش نویس', max_length=50, verbose_name='نوع پرداخت')),
                ('transaction_datetime', models.DateTimeField(verbose_name='transaction_datetime')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
            },
            bases=('core.page', utility.utils.LinkHelper),
        ),
        migrations.CreateModel(
            name='TransactionCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='title')),
                ('color_origin', models.CharField(blank=True, choices=[('success', 'success'), ('danger', 'danger'), ('warning', 'warning'), ('primary', 'primary'), ('secondary', 'secondary'), ('info', 'info'), ('light', 'light'), ('rose', 'rose'), ('dark', 'dark')], max_length=50, null=True, verbose_name='color')),
            ],
            options={
                'verbose_name': 'TransactionCategory',
                'verbose_name_plural': 'TransactionCategories',
            },
        ),
        migrations.CreateModel(
            name='WareHouse',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.page')),
                ('address', models.CharField(blank=True, max_length=50, null=True, verbose_name='address')),
                ('tel', models.CharField(blank=True, max_length=50, null=True, verbose_name='tel')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.account', verbose_name='owner')),
            ],
            options={
                'verbose_name': 'WareHouse',
                'verbose_name_plural': 'WareHouses',
            },
            bases=('core.page',),
        ),
        migrations.CreateModel(
            name='Cheque',
            fields=[
                ('transaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounting.transaction')),
                ('cheque_date', models.DateField(verbose_name='تاریخ چک')),
            ],
            options={
                'verbose_name': 'چک',
                'verbose_name_plural': 'چک ها',
            },
            bases=('accounting.transaction', utility.utils.LinkHelper),
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('transaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounting.transaction')),
                ('tax_percent', models.IntegerField(default=9, verbose_name='درصد مالیات')),
                ('invoice_datetime', models.DateTimeField(verbose_name='تاریخ فاکتور')),
                ('ship_fee', models.IntegerField(default=0, verbose_name='هزینه حمل')),
                ('discount', models.IntegerField(default=0, verbose_name='تخفیف')),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
            },
            bases=('accounting.transaction',),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('transaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounting.transaction')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
            },
            bases=('accounting.transaction',),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('productorservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounting.productorservice')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
            bases=('accounting.productorservice',),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('productorservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounting.productorservice')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
            },
            bases=('accounting.productorservice',),
        ),
        migrations.CreateModel(
            name='Spend',
            fields=[
                ('transaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounting.transaction')),
                ('spend_type', models.CharField(choices=[('هزینه', 'هزینه'), ('حقوق', 'حقوق')], max_length=50, verbose_name='spend_type')),
            ],
            options={
                'verbose_name': 'Spend',
                'verbose_name_plural': 'Spends',
            },
            bases=('accounting.transaction', utility.utils.LinkHelper),
        ),
        migrations.AddField(
            model_name='transaction',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.transactioncategory', verbose_name='category'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.profile', verbose_name='ثبت شده توسط'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='pay_from',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions_from', to='accounting.account', verbose_name='pay_from'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='pay_to',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions_to', to='accounting.account', verbose_name='pay_to'),
        ),
        migrations.CreateModel(
            name='FinancialDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.account', verbose_name='account')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.transaction', verbose_name='transaction')),
            ],
            options={
                'verbose_name': 'FinancialDocument',
                'verbose_name_plural': 'FinancialDocuments',
            },
            bases=(models.Model, utility.utils.LinkHelper),
        ),
        migrations.CreateModel(
            name='FinancialBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sell_benefit', models.IntegerField(default=0, verbose_name='سود حاصل از فروش')),
                ('sell_loss', models.IntegerField(default=0, verbose_name='زیان حاصل از فروش')),
                ('cost', models.IntegerField(default=0, verbose_name='هزینه')),
                ('tax', models.IntegerField(default=0, verbose_name='مالیات')),
                ('wage', models.IntegerField(default=0, verbose_name='حقوق')),
                ('sell_service', models.IntegerField(default=0, verbose_name='فروش خدمات')),
                ('buy_service', models.IntegerField(default=0, verbose_name='خرید خدمات')),
                ('discount', models.IntegerField(default=0, verbose_name='تخفیف')),
                ('ship_fee', models.IntegerField(default=0, verbose_name='هزینه حمل')),
                ('financial_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.financialdocument', verbose_name='FinancialDocument')),
            ],
            options={
                'verbose_name': 'FinancialBalance',
                'verbose_name_plural': 'FinancialBalances',
            },
            bases=(models.Model, utility.utils.LinkHelper),
        ),
        migrations.CreateModel(
            name='Cost',
            fields=[
                ('spend_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounting.spend')),
                ('cost_type', models.CharField(choices=[('هزینه آب', 'هزینه آب'), ('هزینه تلفن', 'هزینه تلفن'), ('هزینه برق', 'هزینه برق'), ('هزینه اینترنت', 'هزینه اینترنت'), ('هزینه گاز', 'هزینه گاز'), ('هزینه حمل ونقل', 'هزینه حمل ونقل'), ('هزینه اجاره', 'هزینه اجاره')], max_length=50, verbose_name='cost')),
            ],
            options={
                'verbose_name': 'Cost',
                'verbose_name_plural': 'Costs',
            },
            bases=('accounting.spend', utility.utils.LinkHelper),
        ),
        migrations.CreateModel(
            name='Wage',
            fields=[
                ('spend_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounting.spend')),
                ('month', models.IntegerField(verbose_name='month')),
                ('year', models.IntegerField(verbose_name='year')),
            ],
            options={
                'verbose_name': 'Wage',
                'verbose_name_plural': 'Wages',
            },
            bases=('accounting.spend', utility.utils.LinkHelper),
        ),
        migrations.CreateModel(
            name='WareHouseSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='date_added')),
                ('date_registered', models.DateTimeField(verbose_name='date_registered')),
                ('quantity', models.IntegerField(verbose_name='quantity')),
                ('unit_name', models.CharField(choices=[('عدد', 'عدد'), ('گرم', 'گرم'), ('کیلوگرم', 'کیلوگرم'), ('تن', 'تن'), ('متر', 'متر'), ('متر مربع', 'متر مربع'), ('متر مکعب', 'متر مکعب'), ('قطعه', 'قطعه'), ('شاخه', 'شاخه'), ('دستگاه', 'دستگاه'), ('سرویس', 'سرویس'), ('بسته', 'بسته'), ('کیسه', 'کیسه'), ('شات', 'شات'), ('فنجان', 'فنجان'), ('جفت', 'جفت')], default='عدد', max_length=50, verbose_name='unit_name')),
                ('direction', models.CharField(choices=[('ورود به انبار', 'ورود به انبار'), ('خروج از انبار', 'خروج از انبار')], max_length=50, verbose_name='direction')),
                ('status', models.CharField(choices=[('تعریف اولیه', 'تعریف اولیه'), ('در جریان', 'در جریان'), ('تمام شده', 'تمام شده')], default='تعریف اولیه', max_length=50, verbose_name='status')),
                ('description', tinymce.models.HTMLField(blank=True, max_length=50000, null=True, verbose_name='description')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.profile', verbose_name='creator')),
                ('ware_house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.warehouse', verbose_name='ware_house')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.invoice', verbose_name='invoice')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.product', verbose_name='product')),
            ],
            options={
                'verbose_name': 'WareHouseSheet',
                'verbose_name_plural': 'WareHouseSheets',
            },
            bases=(models.Model, utility.utils.LinkHelper),
        ),
        migrations.CreateModel(
            name='InvoiceLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row', models.IntegerField(verbose_name='row')),
                ('quantity', models.FloatField(verbose_name='quantity')),
                ('unit_price', models.IntegerField(verbose_name='unit_price')),
                ('unit_name', models.CharField(choices=[('عدد', 'عدد'), ('گرم', 'گرم'), ('کیلوگرم', 'کیلوگرم'), ('تن', 'تن'), ('متر', 'متر'), ('متر مربع', 'متر مربع'), ('متر مکعب', 'متر مکعب'), ('قطعه', 'قطعه'), ('شاخه', 'شاخه'), ('دستگاه', 'دستگاه'), ('سرویس', 'سرویس'), ('بسته', 'بسته'), ('کیسه', 'کیسه'), ('شات', 'شات'), ('فنجان', 'فنجان'), ('جفت', 'جفت')], default='عدد', max_length=50, verbose_name='unit_name')),
                ('description', models.CharField(blank=True, max_length=50, null=True, verbose_name='description')),
                ('productorservice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.productorservice', verbose_name='productorservice')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.invoice', verbose_name='invoice')),
            ],
            options={
                'verbose_name': 'InvoiceLine',
                'verbose_name_plural': 'InvoiceLines',
            },
        ),
        migrations.CreateModel(
            name='Guarantee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='شروع گارانتی')),
                ('end_date', models.DateField(verbose_name='پابان گارانتی')),
                ('status', models.CharField(choices=[('معتبر', 'معتبر'), ('نامعتبر', 'نامعتبر'), ('پایان یافته', 'پایان یافته'), ('در جریان', 'در جریان'), ('تعویض شده', 'تعویض شده'), ('تعمیر شده', 'تعمیر شده'), ('برگشت داده شده', 'برگشت داده شده')], default='معتبر', max_length=50, verbose_name='وضعیت')),
                ('type', models.CharField(choices=[('تعمیر', 'تعمیر'), ('تعویض', 'تعویض')], default='تعمیر', max_length=50, verbose_name='نوع گارانتی')),
                ('serial_no', models.CharField(max_length=50, verbose_name='شماره سریال')),
                ('conditions', models.CharField(blank=True, max_length=5000, null=True, verbose_name='شرایط')),
                ('description', tinymce.models.HTMLField(blank=True, max_length=50000, null=True, verbose_name='توضیحات')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.invoice', verbose_name='فاکتور')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.product', verbose_name='کالا')),
            ],
            options={
                'verbose_name': 'Guarantee',
                'verbose_name_plural': 'Guarantees',
            },
            bases=(models.Model, utility.utils.LinkHelper),
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('account_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounting.account')),
                ('account_no', models.CharField(blank=True, max_length=50, null=True, verbose_name='shomareh')),
                ('card_no', models.CharField(blank=True, max_length=50, null=True, verbose_name='card')),
                ('shaba_no', models.CharField(blank=True, max_length=50, null=True, verbose_name='shaba')),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounting.bank', verbose_name='bank')),
            ],
            options={
                'verbose_name': 'BankAccount',
                'verbose_name_plural': 'BankAccounts',
            },
            bases=('accounting.account',),
        ),
    ]
