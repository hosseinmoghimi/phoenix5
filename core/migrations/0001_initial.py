# Generated by Django 4.0.2 on 2022-03-19 00:50

import core.models
import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models
import utility.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Icon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True, verbose_name='title')),
                ('icon_fa', models.CharField(blank=True, max_length=50, null=True, verbose_name='icon fa')),
                ('icon_material', models.CharField(blank=True, max_length=50, null=True, verbose_name='material_icon')),
                ('icon_svg', models.TextField(blank=True, null=True, verbose_name='svg_icon')),
                ('color', models.CharField(choices=[('success', 'success'), ('danger', 'danger'), ('warning', 'warning'), ('primary', 'primary'), ('secondary', 'secondary'), ('info', 'info'), ('light', 'light'), ('rose', 'rose'), ('dark', 'dark')], default='primary', max_length=50, verbose_name='color')),
                ('width', models.IntegerField(blank=True, null=True, verbose_name='عرض آیکون')),
                ('height', models.IntegerField(blank=True, null=True, verbose_name='ارتفاع آیکون')),
                ('priority', models.IntegerField(default=1000, verbose_name='priority')),
                ('image_origin', models.ImageField(blank=True, null=True, upload_to='images/Icon/', verbose_name='تصویر آیکون')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='authentication.profile', verbose_name='profile')),
            ],
            options={
                'verbose_name': 'Icon',
                'verbose_name_plural': 'Icons',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='title')),
                ('description', tinymce.models.HTMLField(blank=True, max_length=50000, null=True, verbose_name='توضیحات')),
                ('thumbnail_origin', models.ImageField(blank=True, null=True, upload_to='images/ImageBase/Thumbnail/', verbose_name='تصویر کوچک')),
                ('image_main_origin', models.ImageField(blank=True, null=True, upload_to='images/ImageBase/Main/', verbose_name='تصویر اصلی')),
                ('image_header_origin', models.ImageField(blank=True, null=True, upload_to='images/ImageBase/Header/', verbose_name='تصویر سربرگ')),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'تصاویر',
            },
            bases=(models.Model, utility.utils.LinkHelper),
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=5000, verbose_name='عنوان')),
                ('thumbnail_origin', models.ImageField(blank=True, null=True, upload_to='images/ImageBase/Thumbnail/', verbose_name='تصویر کوچک')),
                ('short_description', tinymce.models.HTMLField(blank=True, max_length=50000, null=True, verbose_name='توضیحات کوتاه')),
                ('description', tinymce.models.HTMLField(blank=True, max_length=50000, null=True, verbose_name='توضیحات')),
                ('app_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='app_name')),
                ('class_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='class_name')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='date_added')),
                ('priority', models.IntegerField(default=1000, verbose_name='ترتیب')),
                ('archive', models.BooleanField(default=False, verbose_name='archive?')),
            ],
            options={
                'verbose_name': 'Page',
                'verbose_name_plural': 'Pages',
            },
            bases=(models.Model, utility.utils.LinkHelper, core.models.ImageMixin),
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_name', models.CharField(max_length=50, verbose_name='app_name')),
                ('name', models.CharField(max_length=50, verbose_name='app_name')),
                ('origin_value', models.CharField(blank=True, max_length=50000, null=True, verbose_name='origin_value')),
            ],
            options={
                'verbose_name': 'Parameter',
                'verbose_name_plural': 'Parameters',
            },
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_name', models.CharField(max_length=50, verbose_name='app_name')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('image_origin', models.ImageField(blank=True, null=True, upload_to='images/pictures/', verbose_name='image')),
            ],
            options={
                'verbose_name': 'Picture',
                'verbose_name_plural': 'Pictures',
            },
            bases=(models.Model, utility.utils.LinkHelper),
        ),
        migrations.CreateModel(
            name='Download',
            fields=[
                ('icon_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.icon')),
                ('file', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/uploads', location='d:\\phoenix5\\uploads'), upload_to='core/downloads', verbose_name='فایل ضمیمه')),
                ('mirror_link', models.CharField(blank=True, max_length=10000, null=True, verbose_name='آدرس بیرونی')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='افزوده شده در')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='اصلاح شده در')),
                ('download_counter', models.IntegerField(default=0, verbose_name='download_counter')),
                ('is_open', models.BooleanField(default=False, verbose_name='is_open?')),
                ('profiles', models.ManyToManyField(blank=True, related_name='profile_downloads', to='authentication.Profile', verbose_name='profiles')),
            ],
            options={
                'verbose_name': 'Download',
                'verbose_name_plural': 'Downloads',
            },
            bases=('core.icon',),
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('icon_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.icon')),
                ('url', models.CharField(max_length=2000, verbose_name='url')),
            ],
            options={
                'verbose_name': 'Link',
                'verbose_name_plural': 'Links',
            },
            bases=('core.icon',),
        ),
        migrations.CreateModel(
            name='PageLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.page', verbose_name='page')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.profile', verbose_name='profile')),
            ],
            options={
                'verbose_name': 'PageLike',
                'verbose_name_plural': 'PageLikes',
            },
        ),
        migrations.CreateModel(
            name='PageImage',
            fields=[
                ('image_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.image')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.page', verbose_name='page')),
            ],
            options={
                'verbose_name': 'PageImage',
                'verbose_name_plural': 'PageImages',
            },
            bases=('core.image', utility.utils.LinkHelper),
        ),
        migrations.CreateModel(
            name='PageLink',
            fields=[
                ('link_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.link')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.page', verbose_name='page')),
            ],
            options={
                'verbose_name': 'PageLink',
                'verbose_name_plural': 'PageLinks',
            },
            bases=('core.link', utility.utils.LinkHelper),
        ),
        migrations.CreateModel(
            name='PageDownload',
            fields=[
                ('download_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.download')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.page', verbose_name='page')),
            ],
            options={
                'verbose_name': 'PageDownload',
                'verbose_name_plural': 'PageDownloads',
            },
            bases=('core.download', utility.utils.LinkHelper),
        ),
    ]
